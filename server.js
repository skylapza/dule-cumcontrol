const express = require("express");
const app = express();
const http = require("http").createServer(app);
const io = require("socket.io")(http);
const path = require("path");

const PORT = process.env.PORT || 3000;
app.use(express.static(path.join(__dirname, "public")));

// ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡πâ‡∏≠‡∏á
// rooms = {
//   'roomNumber': {
//     player: socket.id,
//     playerName: '‡∏ä‡∏∑‡πà‡∏≠ Player',
//     playerReady: false, // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≠‡∏á Player
//     master: socket.id,
//     masterName: '‡∏ä‡∏∑‡πà‡∏≠ Master',
//     masterReady: false, // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≠‡∏á Master
//     gameStarted: false, // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
//   }
// }
const rooms = {};
const connectedUsers = {}; // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠

io.on("connection", (socket) => {
  console.log("üë§ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠:", socket.id);
  connectedUsers[socket.id] = socket.id; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
  io.emit("userCount", Object.keys(connectedUsers).length); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Client ‡∏Ç‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤ Lobby)
  socket.on('requestRoomStatus', () => {
    // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ Client ‡∏ô‡∏µ‡πâ
    for (const roomNum in rooms) {
      if (rooms.hasOwnProperty(roomNum)) {
        const roomData = rooms[roomNum];
        socket.emit("roomStatusUpdate", {
          room: parseInt(roomNum),
          player: roomData.playerName || null,
          master: roomData.masterName || null,
          readyToStart: roomData.player && roomData.master && roomData.playerReady && roomData.masterReady, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ready
          playerReady: roomData.playerReady || false,
          masterReady: roomData.masterReady || false
        });
      }
    }
  });


  socket.on("joinRoom", ({ room, role, name }) => {
    if (!rooms[room]) {
      rooms[room] = {
        player: null,
        playerName: null,
        playerReady: false,
        master: null,
        masterName: null,
        masterReady: false,
        gameStarted: false
      };
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ô‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    if (role === "player") {
      if (rooms[room].player) {
        return socket.emit("roomError", "‡∏ù‡∏±‡πà‡∏á Player ‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ!");
      }
      rooms[room].player = socket.id;
      rooms[room].playerName = name;
      rooms[room].playerReady = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
    } else if (role === "master") {
      if (rooms[room].master) {
        return socket.emit("roomError", "‡∏ù‡∏±‡πà‡∏á Master ‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ!");
      }
      rooms[room].master = socket.id;
      rooms[room].masterName = name;
      rooms[room].masterReady = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
    } else {
        return socket.emit("roomError", "‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!");
    }

    socket.join(room); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ socket ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á
    socket.room = room; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà socket object
    socket.role = role; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà socket object
    socket.username = name; // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà socket object

    console.log(`${name} (${role}) ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° Room ${room}`);

    // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞ Lobby
    io.to(room).emit("roomStatusUpdate", {
      room: room,
      player: rooms[room].playerName || null,
      master: rooms[room].masterName || null,
      readyToStart: rooms[room].player && rooms[room].master && rooms[room].playerReady && rooms[room].masterReady,
      playerReady: rooms[room].playerReady,
      masterReady: rooms[room].masterReady
    });
    // ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ Lobby ‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏´‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    io.emit("roomStatusUpdate", {
        room: room,
        player: rooms[room].playerName || null,
        master: rooms[room].masterName || null,
        readyToStart: rooms[room].player && rooms[room].master && rooms[room].playerReady && rooms[room].masterReady,
        playerReady: rooms[room].roomPlayerReady,
        masterReady: rooms[room].roomMasterReady
    });
  });

  // Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô "‡∏û‡∏£‡πâ‡∏≠‡∏°"
  socket.on("playerReady", ({ room, role }) => {
    if (!rooms[room] || !rooms[room][role] || rooms[room][role] !== socket.id) {
      console.log(`Error: ${socket.id} (Role: ${role}) ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á ${room} ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á`);
      return socket.emit("roomError", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÑ‡∏î‡πâ!");
    }

    if (role === "player") {
      rooms[room].playerReady = true;
      console.log(`${socket.username} (Player) ‡πÉ‡∏ô Room ${room} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß.`);
    } else if (role === "master") {
      rooms[room].masterReady = true;
      console.log(`${socket.username} (Master) ‡πÉ‡∏ô Room ${room} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß.`);
    }

    // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞ Lobby
    io.to(room).emit("roomStatusUpdate", {
      room: room,
      player: rooms[room].playerName || null,
      master: rooms[room].masterName || null,
      readyToStart: rooms[room].player && rooms[room].master && rooms[room].playerReady && rooms[room].masterReady,
      playerReady: rooms[room].playerReady,
      masterReady: rooms[room].masterReady
    });
    // ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ Lobby ‡∏î‡πâ‡∏ß‡∏¢
    io.emit("roomStatusUpdate", {
        room: room,
        player: rooms[room].playerName || null,
        master: rooms[room].masterName || null,
        readyToStart: rooms[room].player && rooms[room].master && rooms[room].playerReady && rooms[room].masterReady,
        playerReady: rooms[room].playerReady,
        masterReady: rooms[room].masterReady
    });

    // ‡∏ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á Player ‡πÅ‡∏•‡∏∞ Master ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    if (rooms[room].playerReady && rooms[room].masterReady && rooms[room].player && rooms[room].master) {
      console.log(`‡∏ó‡∏±‡πâ‡∏á Player ‡πÅ‡∏•‡∏∞ Master ‡πÉ‡∏ô Room ${room} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß! ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°...`);
      rooms[room].gameStarted = true; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß

      // ‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÉ‡∏´‡πâ Player ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ player_game.html
      io.to(rooms[room].player).emit("redirect", `/player_game.html?room=${room}`);
      // ‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÉ‡∏´‡πâ Master ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ master_control.html
      io.to(rooms[room].master).emit("redirect", `/master_control.html?room=${room}`);

      // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ready ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å
      // ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ Logic ‡∏•‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°‡∏à‡∏ö
    }
  });


  // Chat Message
  socket.on("chatMessage", ({ room, text, user }) => {
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢
    io.to(room).emit("chatMessage", { user: user, text: text });
  });


  // WebRTC Signaling (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Video/Audio Call)
  socket.on('signal', (data) => {
    // ‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì WebRTC ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡∏π‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
    if (socket.room && rooms[socket.room]) {
      const roomInfo = rooms[socket.room];
      const partnerSocketId = (socket.id === roomInfo.player) ? roomInfo.master : roomInfo.player;
      if (partnerSocketId) {
        console.log(`‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏à‡∏≤‡∏Å ${socket.id} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${partnerSocketId} ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á ${socket.room}`);
        io.to(partnerSocketId).emit('signal', data);
      }
    }
  });

  // Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Client ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
  socket.on("disconnect", () => {
    console.log("‚ùå ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠:", socket.id);
    delete connectedUsers[socket.id]; // ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    io.emit("userCount", Object.keys(connectedUsers).length); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

    const room = socket.room;
    if (room && rooms[room]) {
      let partnerSocketId = null;
      let disconnectedRole = null;
      let partnerRole = null;

      if (socket.id === rooms[room].player) {
        partnerSocketId = rooms[room].master;
        disconnectedRole = "Player";
        partnerRole = "Master";
        delete rooms[room].player;
        delete rooms[room].playerName;
        rooms[room].playerReady = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°
      } else if (socket.id === rooms[room].master) {
        partnerSocketId = rooms[room].player;
        disconnectedRole = "Master";
        partnerRole = "Player";
        delete rooms[room].roomMaster;
        delete rooms[room].masterName;
        rooms[room].masterReady = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°
      }

      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏π‡πà
      if (partnerSocketId) {
        console.log(`‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ${partnerRole} (${partnerSocketId}) ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á ${room} ‡∏ß‡πà‡∏≤ ${disconnectedRole} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á`);
        io.to(partnerSocketId).emit("partnerDisconnected", `${disconnectedRole} ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!`);
        // ‡∏û‡∏≤‡∏Ñ‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Lobby
        io.to(partnerSocketId).emit("redirect", "/lobby.html");
      }

      // ‡∏ñ‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô
      if (!rooms[room].player && !rooms[room].master) {
        delete rooms[room];
        console.log(`Room ${room} ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß.`);
      } else {
        // ‡∏ñ‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô (‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á Lobby)
        console.log(`‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Room ${room} ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠`);
        io.to(room).emit("roomStatusUpdate", {
          room: room,
          player: rooms[room].playerName || null,
          master: rooms[room].masterName || null,
          readyToStart: rooms[room].player && rooms[room].master && rooms[room].playerReady && rooms[room].masterReady,
          playerReady: rooms[room].playerReady,
          masterReady: rooms[room].masterReady
        });
      }
      // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏õ‡∏¢‡∏±‡∏á Lobby ‡∏î‡πâ‡∏ß‡∏¢ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡∏•‡∏á)
      io.emit("roomStatusUpdate", {
          room: room,
          player: rooms[room].playerName || null,
          master: rooms[room].masterName || null,
          readyToStart: rooms[room].player && rooms[room].master && rooms[room].playerReady && rooms[room].masterReady,
          playerReady: rooms[room].playerReady,
          masterReady: rooms[room].masterReady
      });
    }
  });
});

http.listen(PORT, () => {
  console.log(`üöÄ Server ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï ${PORT}`);
});
